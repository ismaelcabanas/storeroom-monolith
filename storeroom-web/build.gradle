buildscript {
	ext {
		postgresVersion = '42.2.18'
		testcontainerVersion = '1.15.0'
		cucumberVersion = '6.6.0'
		kotestAssertionsVersion = '4.0.7'
	}

	dependencies {
		classpath "org.postgresql:postgresql:${postgresVersion}"
	}
}

plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'idea'
	id 'org.jetbrains.kotlin.jvm' version '1.3.72'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.3.72'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.72'
	id 'org.jetbrains.kotlin.plugin.allopen' version '1.3.72'
	//id 'io.gitlab.arturbosch.detekt' version '1.9.0'
	id 'org.unbroken-dome.test-sets' version '3.0.1'
	id 'jacoco'
}

group = "cabanas.garcia.ismael"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
	mavenCentral()
}

testSets {
	integrationTest { dirName = 'integration-test' }
	acceptanceTest { dirName = 'acceptance-test' }
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	acceptanceTestImplementation.extendsFrom integrationTestImplementation
}

dependencies {
	// Spring dependencies
	implementation("org.springframework.boot:spring-boot-starter-mustache")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-hateoas")

	// Database
	runtimeOnly("org.postgresql:postgresql:${postgresVersion}")
	implementation("org.flywaydb:flyway-core:6.5.7")

	// Kotlin
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

	// Test
	testImplementation("org.junit.jupiter:junit-jupiter-api:5.4.2")
	testImplementation("org.junit.jupiter:junit-jupiter-params:5.4.2")
	testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.4.2")
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.4.2")
	testImplementation("org.mockito:mockito-inline:2.23.0")
	testImplementation("org.mockito:mockito-junit-jupiter:2.27.0")
	testImplementation("org.assertj:assertj-core:3.14.0")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("io.rest-assured:spring-mock-mvc:3.1.1")
	testImplementation("com.github.javafaker:javafaker:1.0.1")
	testImplementation("io.kotest:kotest-assertions-core:$kotestAssertionsVersion")

	// Cucumber Test
	testImplementation "io.cucumber:cucumber-java:" + cucumberVersion
	testImplementation "io.cucumber:cucumber-junit:" + cucumberVersion
	testImplementation "io.cucumber:cucumber-picocontainer:" + cucumberVersion

	// Kotlin Test
	testImplementation("org.jetbrains.kotlin:kotlin-test")
	testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
	testImplementation("io.mockk:mockk:1.10.2")
	testImplementation("org.awaitility:awaitility-kotlin:4.0.3")
	testImplementation("com.ninja-squad:springmockk:1.1.3")

	// Integration test
	integrationTestImplementation(sourceSets.test.output)
	integrationTestImplementation("org.awaitility:awaitility:3.1.5")
	integrationTestImplementation "org.testcontainers:junit-jupiter:${testcontainerVersion}"
	integrationTestImplementation("org.testcontainers:testcontainers:${testcontainerVersion}")
	integrationTestImplementation "org.testcontainers:postgresql:${testcontainerVersion}"

	// Acceptance test
	acceptanceTestImplementation(sourceSets.test.output)
	acceptanceTestImplementation(sourceSets.integrationTest.output)
}

tasks.withType(Test) {
	useJUnitPlatform()
}

integrationTest {
	useJUnitPlatform()
}

acceptanceTest {
	useJUnitPlatform()
}

check.dependsOn jacocoTestReport

check.dependsOn integrationTest
integrationTest.mustRunAfter test
check.dependsOn jacocoIntegrationTestReport

check.dependsOn acceptanceTest
acceptanceTest.mustRunAfter integrationTest
check.dependsOn jacocoAcceptanceTestReport

compileKotlin {
	kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

compileTestKotlin {
	kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

compileIntegrationTestKotlin {
	kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

compileAcceptanceTestKotlin {
	kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

jacocoTestReport {
	dependsOn test
}